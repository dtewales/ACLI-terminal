<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
	<meta name="GENERATOR" content="Microsoft&reg; HTML Help Workshop 4.1">
	<Title>Peer CP functions</Title>
</HEAD>
<BODY>
<h1>Peer CP functions</h1>
<p>The ACLI terminal has some embedded functionality to deal with Extreme chassis based systems where both a Master Control Plane (CP) and a Standby CP are present. This functionality was developped primarily for operating with the PassportERS 8600/8800 series, where doing software upgrades with HA-mode enabled was a bit tricky in that the Standby CP had to be reset independently or simultaneously to the Master CP. It will however also work on more recent VSP9000 and VSP8600 platforms. Essentially the peer CP functionality adds two command line switches which can be added to any CLI command executed against the switch: -peercpu & -bothcpus:</p>
<ul>
	<li><b>-peercpu</b>: Execute the entered CLI command only against the peer CP (not against the Master CP). The advantage of this switch is that it saves the user from having to perform a <i>'peer telnet'</i> onto the Standby CP to execute the command there, and then logout to come back to the Master CP session. Will also work with <i>-peer</i> shortform.</li>
	<li><b>-bothcpus</b>: Execute the entered CLI command against both the Master CP and the Standby CP simultaneously (in fact the command is executed on the Standby CP slightly before executing it on the Master CP, as typically one wants to reboot the whole chassis, and if the Standby CP is not rebooted first, then we instead achieve an HA-mode switchover). Will also work with <i>-both</i> shortform.</li>
</ul>
<p>Both the above command line switches are only available if connected in interactive mode on the Master CP of a chassis with dual CPs and operate by setting up, in the background, a separate and independent CLI connection to the Standby CP. The functionality is clever enough to figure out whether we are connected to the chassis via Out-of-Band (OOB) and if so, whether the Standby CP has a dedicated OOB IP to which the connection can go directly; if not, then a second connection to the Master CP is setup and from there, a <i>'peer telnet'</i> is used to land on the Standby CP. The peer CP connection is automatically setup at the first use of the -peercpu or -bothcpus switches and will remain in place indefinitely thereafter. Alternatively the peer CP connection can be managed using the embedded @peercp command or using the 'peercp' commands under the ACLI control interface.</p>

<p>Example using <i>-peer</i> to view the boot config on the Peer CPU:</p>
<pre>
	ERS8800-2:5#% show bootconfig config -peer
	Connecting to peer CPU ..........................
	Output from Peer CPU:
	#
	# SUN OCT 07 10:46:11 2018 UTC
	# box type : 8k boot configuration file
	#
	flags ftpd true
	flags ha-cpu true
	flags rlogind true
	flags savetostandby true
	flags sshd true
	flags telnetd true
	flags tftpd true
	flags verify-config false
	choice primary image-file "/flash/p80ae72260.img"
	choice secondary image-file "/pcmcia/p80ae7101.img"
	net mgmt ip 10.8.10.17/255.255.224.0 cpu-slot 6
	net mgmt ip 10.8.10.16/255.255.224.0 cpu-slot 5
	delay 10
	mezz-image image-name "/pcmcia/p80m72190.img"
	@ERS8800-2:6#
	ERS8800-2:5#%
</pre>
<p>In the above example, the connection to the peer CP was not already in place, so the connection is setup there and then.</p>
<p>The connection to the peer CP can also be brought up manually (or disconnected) using the <i>@peercp</i> embedded command or the <i>peercp</i> command under the ACLI control interface:</p>
<pre>
	VSP8600-1:1#% @peercp ?
	Syntax: @peercp [connect|disconnect]

	VSP8600-1:1#% @peercp connect
	Connecting to peer CPU ...
	Connected to Peer CPU via shadow connection to 10.8.2.2
</pre>
<p>Example using <i>-both</i> to view the timezone settings across both CPUs:</p>
<pre>
	ERS8800-2:5#% show bootconfig tz -both
	Output from Peer CPU:
	tz dst-end M10.5.0/0200
	tz dst-name "UTC"
	tz dst-offset 60
	tz dst-start M4.1.0/0200
	tz name "UTC"
	tz offset-from-utc 0
	TIMEZONE=UTC:UTC:0:::0
	@ERS8800-2:6#
	
	Output from Master CPU:
	tz dst-end M10.5.0/0200
	tz dst-name "UTC"
	tz dst-offset 60
	tz dst-start M4.1.0/0200
	tz name "UTC"
	tz offset-from-utc 0
	TIMEZONE=UTC:UTC:0:::0
	ERS8800-2:5#%
</pre>
<p>In the above example, the connection to the peer cp was already in place, so the output from both CPs is immediately available.</p>
<p>Example to reboot both ERS8800 CPUs in an HA-mode enabled configuration:</p>
<pre>
	ERS8800-1:5#% reset -both
	Connecting to peer CPU ..................................
	Output from Peer CPU:
	
	Output from Master CPU:
	ERS8800-1:5#%
	Received eof from connection
	
	------> Connection closed: SPACE to re-connect / Q to quit <------
</pre>
<p>The status of the peer cp connection can be viewed using either the <i>@peercp</i> embedded command or the <i>peercp</i> command under the ACLI control interface.</p>
<pre>
	ERS8800-1:5#% @peercp
	Directly connected to Peer CPU on OOB IP 10.8.9.17
</pre>
<p>In the above example, the peer CP connection was made directly to the Standby CPU OOB IP interface.</p>
<pre>
	VSP8600-1:1#% @peercp
	Connected to Peer CPU via shadow connection to 10.8.2.2
</pre>
<p>In the above example, the peer CP connection was made via a second connection to the Master CP and, from there, into the Standby CP (using <i>peer telnet</i>). This can be seen by inspecting the connected users:</p>
<pre>
	VSP8600-1:1#% show users
	SESSION   USER                ACCESS    IP ADDRESS
	Console                       none      ----------
	SSH0      rwa                 rwa       10.8.0.158 (current)
	SSH1      rwa                 rwa       10.8.0.158
	VSP8600-1:1#%
</pre>

</BODY>
</HTML>
