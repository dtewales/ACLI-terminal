<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<meta name="GENERATOR" content="Microsoft&reg; HTML Help Workshop 4.1">
<Title>ACLI Spawn File</Title>
</HEAD>
<BODY>
<h1>ACLI Spawn File</h1>

<p>ACLI ships with a default <i>'acli.spawn'</i> file. This file is used to determine how best to spawn new ACLI terminal instances across any OS, such as Windows, MacOS or any of the Linux distributions. The file is inspected by the following ACLI applications:</p>
<ul>
	<li>ACLI embedded command <i>@launch</i>; this allows an existing ACLI instance to spawn a new instance.</li>
	<li>ACLI GUI Script (acligui); this tool allows launching multiple ACLI instances at once, from a file, batch file, or the GUI itself. See the AcliGui entry under Other tools section.</li>
	<li>XMC ACLI Script (xmcacli); this tool is capable of extracting all the devices discovered in XMC, and to launch multiple ACLI instances at any of those devices. See the XmcAcli entry under Other tools section.</li>
</ul>
<p>The above ACLI applications will all search for an <i>'acli.spawn'</i> file in the following directories in this order:</p>
<ol>
	<li>ENV path %ACLI% (if you defined it)</li>
	<li>ENV path $HOME/.acli (on Unix systems)</li>
	<li>ENV path %USERPROFILE%\.acli (on Windows)</li>
	<li>Same directory where acli.pl resides</li>
</ol>
<p>Note that the file is versioned and the version located in the same directory where acli.pl resides can get updated by the ACLI update script. Hence if you wish to modify it you should make a new version in one of the other paths (or you give it a huge 999 version).</p>
<p>The <i>'acli.spawn'</i> file shipped with ACLI contains detailed commentes. Essentially it allows to build a command line executable to spawn a new ACLI instance on a per OS basis, using a number of <i>&lt;Tags&gt;</i> which all of the above ACLI applications will replace with corresponding values at launch time. These tags are supported:</p>

<ul>
	<li><b>&lt;WINDOW-NAME&gt;   :</b> [Optional] Name to assign to the new window</li>
	<li><b>&lt;INSTANCE-NAME&gt; :</b> [Optional] If tabs are supported within the window, this is used as an identifer to the containing window where to open subsequent tabs</li>
	<li><b>&lt;TAB-NAME&gt;      :</b> [Optional] Name to assign to a tab within the window</li>
	<li><b>&lt;CWD&gt;           :</b> [Optional] Working directory to assign</li>
	<li><b>&lt;ACLI-PROFILE&gt;  :</b> [Mandatory on MSWin32] Tab profile to launch for ACLI (only applicable to Console.exe)</li>
	<li><b>&lt;ACLI-PATH&gt;     :</b> [Optional] Path to ACLI executable (batch or shell file, without .pl extension)</li>
	<li><b>&lt;ACLI-PL-PATH&gt;  :</b> [Optional] Path to acli.pl script file</li>
	<li><b>&lt;ACLI-ARGS&gt;     :</b> [Mandatory] Argument to pass to ACLI</li>
</ul>
<p>Each line entry consists of 4 space separated values:</p>
<ol>
	<li>The OS version, as reported by Perl's $^O</li>
	<li>An optional value in format N or F:N; where both N & F are decimal values (in range 0-9999) representing milliseconds to wait between every execution, where
		<ul>
			<li>F : Timer to wait between 1st and 2nd ACLI launch (required with Console.exe as it takes some time for the app to first launch)</li>
			<li>N : Timer to wait between all subsequent ACLI lauches</li>
		</ul>
	</li>
	<li>Executable, including path</li>
	<li>The rest of the line will be treated as arguments to supply to the above executable</li>
</ol>

<p>As an example, these are the entries in the default <i>'acli.spawn'</i> file shipped with ACLI</p>
<pre>
MSWin32  600:100   %ACLIDIR%\Console.exe      -reuse -t &lt;ACLI-PROFILE&gt; -i "&lt;INSTANCE-NAME&gt;" -w "&lt;WINDOW-NAME&gt;" -n "&lt;TAB-NAME&gt;" -r "&lt;ACLI-ARGS&gt;"
darwin             $ACLIDIR/ttab              -t "&lt;TAB-NAME&gt;" -d "&lt;CWD&gt;" &lt;ACLI-PATH&gt; &lt;ACLI-ARGS&gt;
linux              /usr/bin/gnome-terminal    --tab --title "&lt;TAB-NAME&gt;" --working-directory "&lt;CWD&gt;" -- &lt;ACLI-PL-PATH&gt; &lt;ACLI-ARGS&gt;
</pre>
<p>It is recommended to avoid changing settings for MSWin32 and MACOS (darwin) as the ACLI distributions for these supply all the necessary executables</p>
<p>Where this file becomes really useful is when using the above ACLI applications on Linux systems, where there is a huge variety of desktop environments, each with a different executable to open up a terminal window.</p>
<p>For debugging use of the <i>acli.spawn</i> file, enable debug mode on ACLI, or set the <i>-d</i> command line switch on <i>acligui</i> or <i>xmcacli.</i></p>
</BODY>
</HTML>
