<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
	<meta name="GENERATOR" content="Microsoft&reg; HTML Help Workshop 4.1">
	<Title>Acli.ini file</Title>
</HEAD>
<BODY>
<h1>Acli.ini file</h1>
<p>The ACLI terminal comes with a set of default settings and behaviours which can be overridden on startup using command line switches. However it can be annoying to remember every time to include the relative command line switches, also it becomes impractical to have too many command line switches.</p>
<p>For this reason ACLI comes with an <i>acli.ini</i> file where a number of keys can be set to permanently override ACLI's default behaviours. The ACLI distribution already includes an <i>acli.ini</i> file which can be found in the install directory. This file can be used as a template to create a custom ini file. In it are listed all the available keys and the syntax to use as well as a description of each key. The keys themselves are however all commented out and show the default value for the setting.</p>
<p>To create a custom <i>acli.ini</i> file two options are possible:</p>
<ul>
	<li>The supplied <i>acli.ini</i> file in the ACLI install directory is simply edited and modified. This is not the preferred method, as this file is versioned and when running the ACLI update script, if a newer version of this file exists (e.g. if new ini keys are defined and need adding to the template) on the update server, the local copy of this file will be over-written (a temporary backup can be found in the updates/rollback directory). To prevent this from happening, one could edit the version number of the <i>acli.ini</i> file to 999 to ensure it never gets over-written by the update script. The next method is however preferred.</li>
	<li>Edit the supplied <i>acli.ini</i> file but save the modified file into one of the following directories:
		<ul>
			<li>ENV path <i>%ACLI%</i> (if you defined it)</li>
			<li>ENV path <i>$HOME/.acli</i> (on Unix systems)</li>
			<li>ENV path <i>%USERPROFILE%\.acli</i> (on Windows)</li>
		</ul>
	</li>
</ul>
<p>Follows a list of all the keys which can be set in the <i>acli.ini</i> file.</p>
<ul>
	<li><b>timeout_val</b>: Default timeout value in secs; used by underlying Perl module <i>Control::CLI</i>. Default is 10 seconds.</li>
	<li><b>connect_timeout_val</b>: SSH & Telnet connection timeout - for establishing TCP connection. Default is 25 seconds.</li>
	<li><b>login_timeout_val</b>: Timeout in seconds to apply to initial login (navigating through login banners etc, to obtain first CLI prompt). Default is 30 seconds.</li>
	<li><b>peercp_timeout_val</b>: Default timeout value in secs for establishing peer CPU connection. Default is 4 seconds.</li>
	<li><b>auto_detect_flg</b>: Flag which determines whether the ACLI terminal tries to auto detect the connected host type during connection and...</li>
	<li><b>family_type_interact_flg:&lt;family-type&gt;</b>: ... then goes into interact mode, if the family type interact flag is set. By default family types which are supported by ACLI are set. The family type of the connected device can be viewed by inspecting the <i>$_family_type</i> attribute variable:
	<pre>
	VSP-8284XSQ:1#% @vars attribute family
	
	$_family_type          = PassportERS
	
	VSP-8284XSQ:1#%
	</pre></li>
	<li><b>prompt_suffix_flg</b>: Flag which if set and if the ACLI terminal is in interactive mode, then the <b>prompt_suffix_str</b> will be appended to the switch prompt to indicate that the terminal has locked on the device prompt. Default is enabled.</li>
	<li><b>prompt_suffix_str</b>: String which, if <b>prompt_suffix_flg</b> is enabled, is appended to connected device's CLI prompt to indicate that the ACLI terminal has locked on the CLI prompt. Default string is '% '</li>
	<li><b>more_paging_flg</b>: Flag which if enabled, the ACLI terminal will by default have local more paging enabled upon connection. Default is enabled. (This is the same as performing <i>'@more enable'</i> once connected)</li>
	<li><b>more_paging_lines_val</b>: Default number of lines displayed by ACLI's local more paging in each page of output. Default is 22.</li>
	<li><b>alias_enable_flg</b>: Flag which enables command aliasing by default. Default is enabled.</li>
	<li><b>alias_echo_flg</b>: Flag which, if command aliasing is enabled, determines whether an extra echo line is added to output to indicate how an alias was converted into a switch command. Default is enabled.</li>
	<li><b>vars_echo_flg</b>: Flag which determines whether an extra echo line is added to output to indicate how variables were dereferenced into switch command. Default is enabled.</li>
	<li><b>history_echo_flg</b>: Flag which determines whether an extra echo line is added to output to indicate which history recalled command (using <i>!&lt;n&gt;</i>) is being sent as switch command. Default is enabled.</li>
	<li><b>dictionary_echo_flg</b>: Flag which determines whether or how an extra echo line is added to output to indicate how a dictionary command was translated. Default is 2 (single command)</li>
	<li><b>ctrl_escape_chr</b>: Default CTRL character to break into ACLI control interface. Default is <i>'^]'</i>.</li>
	<li><b>ctrl_quit_chr</b>: Default CTRL character to quit the ACLI terminal. Default is <i>'^Q'</i>.</li>
	<li><b>ctrl_interact_toggle_chr</b>: Default CTRL character to toggle between ACLI interact and transparent modes. Default is <i>'^T'</i>.</li>
	<li><b>ctrl_more_toggle_chr</b>: Default CTRL character to toggle between local more paging enabled and disabled. Default is <i>'^P'</i>.</li>
	<li><b>ctrl_break_chr</b>: Default CTRL character to send the break signal to connected device. Default is <i>'^S'</i>.</li>
	<li><b>ctrl_clear_screen_chr</b>: Default CTRL character to clear the screen. Default is <i>'^L'</i>.</li>
	<li><b>ctrl_debug_chr</b>: Default CTRL character to dump debug information (will only work if ACLI terminal is already in debug mode). Default is <i>'^['</i>.</li>
	<li><b>grep_indent_val</b>: Number of SPACE characters to use when indenting an ACLI config (applicable to family types PassportERS & BaystackERS, where the ACLI terminal takes an active role in reformatting the output of "show running-config" with the -i switch set. Default is 3 spaces.</li>
	<li><b>syntax_acli_mode_flg</b>: Flag which determines whether '?' behaves like in acli/nncli (1), in that the syntax of whatever partially entered command is automatically displayed (without having to hit the Enter key) or like with old Passport CLI (0) where the '?' character is treated no differently from any other character (and user has to hit the Enter key to get command syntax). Default is enabled.</li>
	<li><b>keepalive_timer_val</b>: Timer in minutes for sending keep alive carriage returns to prevent device from timing out session (0 to disable keepalives). Default is 4 minutes.</li>
	<li><b>transparent_keepalive_flg</b>: Determines whether keep alive carriage returns should also be sent in transparent mode; 0 = no, only in interactive mode; 1 = yes, in both interactive and transparent modes; note that there is no suppression of prompts generated by keepalive in transparent mode. Default is 0</li>
	<li><b>session_timeout_val</b>: Timer in minutes for holding up session to device (0 to disable session timeout). Default is 600 minutes (10 hours).</li>
	<li><b>socket_enable_flg</b>: Enable socket functionality to drive many terminals from one. Default is enabled.</li>
	<li><b>socket_bind_ip_str</b>: Local IP interface where to bind sockets (used for tie-ing terminals together). To bind to all available IP interfaces set to the empty string ''. Default is the loopback address '127.0.0.1'.</li>
	<li><b>socket_send_ip_str</b>: Destination socket IP address used to send to, on controlling (tied) terminal. Default is the loopback broadcast address '127.255.255.255'.</li>
	<li><b>socket_send_ttl_val</b>: IP TTL to use on socket IP Multicast packets; on loopback interface can stay at 0. Default is 0.</li>
	<li><b>socket_send_username_flg</b>: Determines whether the username is encoded in socket datagrams; needed if socket functionality is used by different users on same machine. 0 = disabled; 1 = enabled. Default is enabled (1).</li>
	<li><b>socket_allowed_source_ip_lst</b>: Comma separated list of socket source IP addresses from which listening terminals will accept commands. Default is list of one single IP address, the loopback IP: ['127.0.0.1'].</li>
	<li><b>socket_names_val:all</b>: Socket port number base. The 'all' port is always defined and determines the starting UDP port number used for sockets. Note that if an <i>acli.sockets</i> file already exists, then the port numbers will be read from that file. Default is 50000.</li>
	<li><b>socket_echo_mode_val</b>: Default local echo mode used in socket tied terminal: 0 = no echo from listening terminals; 1 = only errors messages from listening terminals; 2 = all output from listening terminals. Default is 1.</li>
	<li><b>pseudo_prompt_str</b>: Pseudo terminal prompt string. Default is 'PSEUDO#'.</li>
	<li><b>source_error_detect_flg</b>: Flag which determines whether or not we want to pause sourcing of commands (in scripting mode) if an error is detected from the connected device. Default is enabled. (This is the same as using '@error enable')</li>
	<li><b>source_error_level_str</b>: Error detection (in scripting mode) can be set either for 'error' or just 'warning'. An error condition is when the CLI command sent to the connected device was not executed and an error message was produced by the host. A warning condition is when the CLI command sent to the connected host was executed but still generated a warning message. Default is 'error'. (Note that 'warning' mode is not fully implemented).</li>
	<li><b>newline_chr</b>: Newline character to send to connected host; can be set to "\n" (CR+LF) or "\r"(CR). Default is "\r".</li>
	<li><b>terminal_emulation_str</b>: Default terminal emulation type negotiated during underlying Telnet or SSH connection. Default is 'vt100'. (Does not really matter for most Extreme devices).</li>
	<li><b>terminal_window_size_lst2</b>: Default terminal window size (terminal width, lines per page) negotiated during Telnet or SSH connection. Note that this is not related to the window size of the ConsoleZ application window. It only matters with certain Extreme devices (to date, the WLAN9100 family type) which actually uses these negotiated values for command line scrolling & more paging. Default is [132, 24].</li>
	<li><b>highlight_fg_colour_str</b>: Default highlight foreground text colour. Accepted values are: black|red|green|yellow|blue|magenta|cyan|white|disable. Default is 'red'.</li>
	<li><b>highlight_bg_colour_str</b>: Default highlight background text colour. Accepted values are: black|red|green|yellow|blue|magenta|cyan|white|disable. Default is 'disable'.</li>
	<li><b>highlight_text_bright_flg</b>: Flag which determines whether the highlighted text is to be rendered as bright. Default is enabled.</li>
	<li><b>highlight_text_underline_flg</b>: Flag which determines whether the highlighted text is to be underlined. Default is disabled.</li>
	<li><b>highlight_text_reverse_flg</b>: Flag which determines whether the highlighted text is to be rendered in reverse mode. Default is disabled.</li>
	<li><b>ssh_default_keys_lst</b>: List of SSH Private keys to try and load on startup; the first key found will be loaded. Provide either the key basename(s) or full key path(s). Default is [<i>'id_rsa'</i>, <i>'id_dsa'</i>]. If just basenames are provided, the keys will be searched in these paths:
		<ul>
			<li><i>%ACLI%\.ssh</i> (if you defined it)</li>
			<li><i>$HOME/.ssh</i> (on Unix systems)</li>
			<li><i>%USERPROFILE%\.ssh</i> (on Windows)</li>
			<li><i>%ACLIDIR%\.ssh</i> (the ACLI install directory)</li>
		</ul>
	</li>
	<li><b>quit_on_disconnect_flg</b>: Flag which determines behaviour when the connection is lost: 0 = offer to reconnect; 1 = quit. Default is 0.</li>
	<li><b>working_directory_str</b>: Default working directory to use for all connections. Default is unset, with empty string ''.</li>
	<li><b>auto_log_to_file_flg</b>: Automatically log session to file: 0 = disabled; 1 = enabled. Default is disabled (0).</li>
	<li><b>log_path_str</b>: If set, determines the default path where session log files (whether using auto-log or not) will be created. If no log path is set, then files will be created in the current working directory. Default is unset, with empty string ''.</li>
	<li><b>auto_log_filename_str</b>: If auto-log is enabled, the filename used will be the device IP or hostname (whichever was provided to make the connection). Via this setting it is possible to pre-pend or append a timestamp to the actual filename. If not set (set to empty string '') the auto-log filename will simply be the ip/hostname of the connection. The "&lt;&gt;" characters represent the ip/hostname portion of the filename, so the timestamp can be either pre-pended or appended as desired; if no "&lt;&gt;" characters are included then the timestamp will be pre-pended. To format the desired timestamp, provide a string supported by POSIX strftime (see <a href=http://perldoc.perl.org/POSIX.html#strftime>http://perldoc.perl.org/POSIX.html#strftime</a>). Default is '%Y_%m_%d-%Hh%Mm%Ss-&lt;&gt;'.</li>
	<li><b>master_trmsrv_file_str</b>: Master terminal-server file. This key should either point to a filename under the ACLI install directory or to the full path to any other file (if not located in the ACLI directory). If set and a the file exists, the date of the file will be compared with the date of the user's personal terminal-server file (<i>%USERPROFILE%\.acli\acli.trmsrv</i>), if it exists, and whichever is the most recent will be used. Setting this key allows any modification of the master terminal-server file to automatically result in it being used next time without having to execute <i>'trmsrv delete file'</i> under the ACLI control interface. Do not set this key to the acli.trmsrv file under your personal directory (<i>%USERPROFILE%\.acli</i>); not setting this key will result in that file always being used if present anyway.</li>
	<li><b>hide_timestamps_flg</b>: Flag which determines whether ACLI should supporess device timestamp banners from the output displayed on screen (the timestamp banners will still get recorded in ACLI logging files), 0 = disable; 1 = enable. Default is 0.</li>
	<li><b>port_ranges_span_slots_flg</b>: Port ranges to span slots. On some devices, like VOSS and XOS, the following port ranges are allowed: 1/1-2/48 (or 1:1-2:48). While undeniably more compact, ACLI will default not to show ranges spanning slots, and will only create ranges within the same slot, like 1/1-1/48,2/1-2/48, which is more easily readable and the last port of each slot is easily recognizeable. 0 = port ranges do not span slots; 1 = port ranges can span slots, on devices which support it. Default is 0.</li>
	<li><b>default_port_range_mode_val</b>: On devices which do not support port ranges (e.g. SecureRouter or WLAN APs generally) this setting determines how ACLI will display port lists (stored in variables). Valid settings are: 0 = no range just comma separated list; 1 = ranges in format 1/1-24; 2 = ranges in format 1/1-1/24.</li>
	<li><b>port_ranges_unconstrain_flg</b>: ACLI will always process port ranges based on actual ports discovered on the connected switch. A port range expanded into a list ($var) will only include ports which actually exist on the connected switch. There are some script uses where it is handy if ports can be captured from output received over tied sockets from other switches by disabling this parameter. If enabled port ranges will only handle slot/port (are not processed: 'ALL', slot/port/chann, insight 1/s<n> ports). 0 = disabled; 1 = enabled. Default is disabled (0).</li>
	<li><b>highlight_entered_command_flg</b>: Flag which determines whether user entered (or pasted) commands, in interactive mode, are to be highlighted by making them bright.</li>
	<li><b>ssh_known_hosts_key_missing_val</b>: SSH known hosts missing key behaviour. This setting determines how ACLI should behave when connecting via SSH to a host for which the key is missing in the known_hosts file. Valid settings are: 0 = SSH connection is refused; 1 = User gets interactively prompted whether to add the key for the host in the known_hosts file, or to connect once without adding the key to known_hosts, or to abort the connection; 2 = The key is automatically added to known_hosts file and a message is displayed to this effect. Default is 1.</li>
	<li><b>ssh_known_hosts_key_changed_val</b>: SSH known hosts failure check behaviour. This setting determines how ACLI should behave when connecting via SSH to a host for which the key is already present in the known_hosts file, but the key offered by the host does not match the key cached in the known_hosts file. Valid settings are: 0 = SSH connection is refused; 1 = User gets interactively prompted whether to update the key for the host in the known_hosts file, or to connect once without updating the key in known_hosts, or to abort the connection; 2 = The key is automatically updated with the new key in the known_hosts file and a message is displayed to this effect. Default is 1.</li>
</ul>

</BODY>
</HTML>
